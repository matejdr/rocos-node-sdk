{
  "parser": "@typescript-eslint/parser",
  "plugins": ["@typescript-eslint/eslint-plugin"],
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "extends": [
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "env": {
    "es6": true,
    "node": true
  },
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "trailingComma": "es5",
        "bracketSpacing": true,
        "jsxBracketSameLine": true,
        "semi": false,
        "arrowParens": "avoid",
        "quoteProps": "preserve"
      }
    ],
    "comma-dangle": ["off"],
    "no-param-reassign": ["off"],
    "no-tabs": 0,
    "arrow-body-style": ["off", "as-needed"],
    "class-methods-use-this": ["off"],
    "import/first": ["off"],
    "camelcase": "off",
    "consistent-return": "off",
    "max-len": ["error", 180],
    "new-cap": ["off"],
    "no-console": ["off"],
    "no-multi-assign": ["warn"],
    "no-plusplus": ["off"],
    "no-restricted-syntax": ["error"],
    "no-trailing-spaces": ["off"],
    "no-underscore-dangle": ["off"],
    "no-unused-vars": [
      "warn",
      {
        "ignoreRestSiblings": true
      }
    ],
    "no-nested-ternary": ["off"],
    "object-curly-spacing": ["off"],
    "padded-blocks": ["off"],
    "semi": ["error", "never"],
    "eslint-comments/no-unused-disable": ["off"],
    "arrow-parens": "off",
    "@typescript-eslint/explicit-function-return-type": [
      "off",
      {
        "allowExpressions": true,
        "allowTypedFunctionExpressions": true
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-empty-interface": "warn",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/ban-ts-comment": [
      "error",
      {
        "ts-expect-error": "allow-with-description"
      }
    ],
    "@typescript-eslint/ban-types": ["error",
      {
        "types": {
          "String": false,
          "Boolean": false,
          "Number": false,
          "Symbol": false,
          "{}": false,
          "Object": false,
          "object": false,
          "Function": false
        },
        "extendDefaults": true
      }
    ]
  }
}
